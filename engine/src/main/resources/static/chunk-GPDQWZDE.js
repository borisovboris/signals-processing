import{$a as w,P as y,R as P,S as m,_a as C,ab as p,cb as b}from"./chunk-OWV6CK4N.js";var x=class{encodeKey(d){return encodeURIComponent(d)}encodeValue(d){return encodeURIComponent(d)}decodeKey(d){return decodeURIComponent(d)}decodeValue(d){return decodeURIComponent(d)}};var A=new P("basePath");var h=class{constructor(d={}){this.apiKeys=d.apiKeys,this.username=d.username,this.password=d.password,this.accessToken=d.accessToken,this.basePath=d.basePath,this.withCredentials=d.withCredentials,this.encoder=d.encoder,d.encodeParam?this.encodeParam=d.encodeParam:this.encodeParam=g=>this.defaultEncodeParam(g),d.credentials?this.credentials=d.credentials:this.credentials={}}selectHeaderContentType(d){if(d.length===0)return;let g=d.find(t=>this.isJsonMime(t));return g===void 0?d[0]:g}selectHeaderAccept(d){if(d.length===0)return;let g=d.find(t=>this.isJsonMime(t));return g===void 0?d[0]:g}isJsonMime(d){let g=new RegExp("^(application/json|[^;/ 	]+/[^;/ 	]+[+]json)[ 	]*(;.*)?$","i");return d!==null&&(g.test(d)||d.toLowerCase()==="application/json-patch+json")}lookupCredential(d){let g=this.credentials[d];return typeof g=="function"?g():g}defaultEncodeParam(d){let g=d.dataFormat==="date-time"&&d.value instanceof Date?d.value.toISOString():d.value;return encodeURIComponent(String(g))}};var $=(()=>{let d=class d{constructor(t,a,l){this.httpClient=t,this.basePath="http://localhost:8080",this.defaultHeaders=new C,this.configuration=new h,l&&(this.configuration=l),typeof this.configuration.basePath!="string"&&(Array.isArray(a)&&a.length>0&&(a=a[0]),typeof a!="string"&&(a=this.basePath),this.configuration.basePath=a),this.encoder=this.configuration.encoder||new x}addToHttpParams(t,a,l){return typeof a=="object"&&!(a instanceof Date)?t=this.addToHttpParamsRecursive(t,a):t=this.addToHttpParamsRecursive(t,a,l),t}addToHttpParamsRecursive(t,a,l){if(a==null)return t;if(typeof a=="object")if(Array.isArray(a))a.forEach(i=>t=this.addToHttpParamsRecursive(t,i,l));else if(a instanceof Date)if(l!=null)t=t.append(l,a.toISOString().substring(0,10));else throw Error("key may not be null if value is Date");else Object.keys(a).forEach(i=>t=this.addToHttpParamsRecursive(t,a[i],l!=null?`${l}.${i}`:i));else if(l!=null)t=t.append(l,a);else throw Error("key may not be null if value is not object or array");return t}checkIfUsernameExists(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter name was null or undefined when calling checkIfUsernameExists.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let c=["application/json"];e=this.configuration.selectHeaderAccept(c)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s="json";e&&(e.startsWith("text")?s="text":this.configuration.isJsonMime(e)?s="json":s="blob");let o=`/api/auth/check-username-exists/${this.configuration.encodeParam({name:"name",value:t,in:"path",style:"simple",explode:!1,dataType:"string",dataFormat:void 0})}`;return this.httpClient.request("get",`${this.configuration.basePath}${o}`,{context:n,responseType:s,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}loginUser(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter userDTO was null or undefined when calling loginUser.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let u=["text/plain"];e=this.configuration.selectHeaderAccept(u)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s=["application/json"],o=this.configuration.selectHeaderContentType(s);o!==void 0&&(r=r.set("Content-Type",o));let c="json";e&&(e.startsWith("text")?c="text":this.configuration.isJsonMime(e)?c="json":c="blob");let f="/api/auth/login-user";return this.httpClient.request("post",`${this.configuration.basePath}${f}`,{context:n,body:t,responseType:c,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}registerUser(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter userDTO was null or undefined when calling registerUser.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let u=[];e=this.configuration.selectHeaderAccept(u)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s=["application/json"],o=this.configuration.selectHeaderContentType(s);o!==void 0&&(r=r.set("Content-Type",o));let c="json";e&&(e.startsWith("text")?c="text":this.configuration.isJsonMime(e)?c="json":c="blob");let f="/api/auth/register-user";return this.httpClient.request("post",`${this.configuration.basePath}${f}`,{context:n,body:t,responseType:c,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}};d.\u0275fac=function(a){return new(a||d)(m(b),m(A,8),m(h,8))},d.\u0275prov=y({token:d,factory:d.\u0275fac,providedIn:"root"});let H=d;return H})();var v=(()=>{let d=class d{constructor(t,a,l){this.httpClient=t,this.basePath="http://localhost:8080",this.defaultHeaders=new C,this.configuration=new h,l&&(this.configuration=l),typeof this.configuration.basePath!="string"&&(Array.isArray(a)&&a.length>0&&(a=a[0]),typeof a!="string"&&(a=this.basePath),this.configuration.basePath=a),this.encoder=this.configuration.encoder||new x}addToHttpParams(t,a,l){return typeof a=="object"&&!(a instanceof Date)?t=this.addToHttpParamsRecursive(t,a):t=this.addToHttpParamsRecursive(t,a,l),t}addToHttpParamsRecursive(t,a,l){if(a==null)return t;if(typeof a=="object")if(Array.isArray(a))a.forEach(i=>t=this.addToHttpParamsRecursive(t,i,l));else if(a instanceof Date)if(l!=null)t=t.append(l,a.toISOString().substring(0,10));else throw Error("key may not be null if value is Date");else Object.keys(a).forEach(i=>t=this.addToHttpParamsRecursive(t,a[i],l!=null?`${l}.${i}`:i));else if(l!=null)t=t.append(l,a);else throw Error("key may not be null if value is not object or array");return t}checkIfCompositionExists(t,a,l="body",i=!1,r){if(t==null)throw new Error("Required parameter locationId was null or undefined when calling checkIfCompositionExists.");if(a==null)throw new Error("Required parameter code was null or undefined when calling checkIfCompositionExists.");let e=this.defaultHeaders,n=r&&r.httpHeaderAccept;if(n===void 0){let f=["application/json"];n=this.configuration.selectHeaderAccept(f)}n!==void 0&&(e=e.set("Accept",n));let s=r&&r.context;s===void 0&&(s=new p);let o="json";n&&(n.startsWith("text")?o="text":this.configuration.isJsonMime(n)?o="json":o="blob");let c=`/api/compositions/composition-exists/${this.configuration.encodeParam({name:"locationId",value:t,in:"path",style:"simple",explode:!1,dataType:"number",dataFormat:"int64"})}/${this.configuration.encodeParam({name:"code",value:a,in:"path",style:"simple",explode:!1,dataType:"string",dataFormat:void 0})}`;return this.httpClient.request("get",`${this.configuration.basePath}${c}`,{context:s,responseType:o,withCredentials:this.configuration.withCredentials,headers:e,observe:l,reportProgress:i})}checkIfDeviceCodeExists(t,a,l="body",i=!1,r){if(t==null)throw new Error("Required parameter compositionId was null or undefined when calling checkIfDeviceCodeExists.");if(a==null)throw new Error("Required parameter code was null or undefined when calling checkIfDeviceCodeExists.");let e=this.defaultHeaders,n=r&&r.httpHeaderAccept;if(n===void 0){let f=["application/json"];n=this.configuration.selectHeaderAccept(f)}n!==void 0&&(e=e.set("Accept",n));let s=r&&r.context;s===void 0&&(s=new p);let o="json";n&&(n.startsWith("text")?o="text":this.configuration.isJsonMime(n)?o="json":o="blob");let c=`/api/compositions/device-code-exists/${this.configuration.encodeParam({name:"compositionId",value:t,in:"path",style:"simple",explode:!1,dataType:"number",dataFormat:"int64"})}/${this.configuration.encodeParam({name:"code",value:a,in:"path",style:"simple",explode:!1,dataType:"string",dataFormat:void 0})}`;return this.httpClient.request("get",`${this.configuration.basePath}${c}`,{context:s,responseType:o,withCredentials:this.configuration.withCredentials,headers:e,observe:l,reportProgress:i})}checkIfDeviceNameExists(t,a,l="body",i=!1,r){if(t==null)throw new Error("Required parameter compositionId was null or undefined when calling checkIfDeviceNameExists.");if(a==null)throw new Error("Required parameter name was null or undefined when calling checkIfDeviceNameExists.");let e=this.defaultHeaders,n=r&&r.httpHeaderAccept;if(n===void 0){let f=["application/json"];n=this.configuration.selectHeaderAccept(f)}n!==void 0&&(e=e.set("Accept",n));let s=r&&r.context;s===void 0&&(s=new p);let o="json";n&&(n.startsWith("text")?o="text":this.configuration.isJsonMime(n)?o="json":o="blob");let c=`/api/compositions/device-name-exists/${this.configuration.encodeParam({name:"compositionId",value:t,in:"path",style:"simple",explode:!1,dataType:"number",dataFormat:"int64"})}/${this.configuration.encodeParam({name:"name",value:a,in:"path",style:"simple",explode:!1,dataType:"string",dataFormat:void 0})}`;return this.httpClient.request("get",`${this.configuration.basePath}${c}`,{context:s,responseType:o,withCredentials:this.configuration.withCredentials,headers:e,observe:l,reportProgress:i})}createComposition(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter baseCompositionDTO was null or undefined when calling createComposition.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let u=[];e=this.configuration.selectHeaderAccept(u)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s=["application/json"],o=this.configuration.selectHeaderContentType(s);o!==void 0&&(r=r.set("Content-Type",o));let c="json";e&&(e.startsWith("text")?c="text":this.configuration.isJsonMime(e)?c="json":c="blob");let f="/api/compositions/create-composition";return this.httpClient.request("post",`${this.configuration.basePath}${f}`,{context:n,body:t,responseType:c,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}createDevice(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter baseDeviceDTO was null or undefined when calling createDevice.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let u=[];e=this.configuration.selectHeaderAccept(u)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s=["application/json"],o=this.configuration.selectHeaderContentType(s);o!==void 0&&(r=r.set("Content-Type",o));let c="json";e&&(e.startsWith("text")?c="text":this.configuration.isJsonMime(e)?c="json":c="blob");let f="/api/compositions/create-device";return this.httpClient.request("post",`${this.configuration.basePath}${f}`,{context:n,body:t,responseType:c,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}deleteComposition(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter id was null or undefined when calling deleteComposition.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let c=[];e=this.configuration.selectHeaderAccept(c)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s="json";e&&(e.startsWith("text")?s="text":this.configuration.isJsonMime(e)?s="json":s="blob");let o=`/api/compositions/delete-composition/${this.configuration.encodeParam({name:"id",value:t,in:"path",style:"simple",explode:!1,dataType:"number",dataFormat:"int64"})}`;return this.httpClient.request("delete",`${this.configuration.basePath}${o}`,{context:n,responseType:s,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}deleteDevice(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter id was null or undefined when calling deleteDevice.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let c=[];e=this.configuration.selectHeaderAccept(c)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s="json";e&&(e.startsWith("text")?s="text":this.configuration.isJsonMime(e)?s="json":s="blob");let o=`/api/compositions/delete-device/${this.configuration.encodeParam({name:"id",value:t,in:"path",style:"simple",explode:!1,dataType:"number",dataFormat:"int64"})}`;return this.httpClient.request("delete",`${this.configuration.basePath}${o}`,{context:n,responseType:s,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}editComposition(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter editedCompositionDTO was null or undefined when calling editComposition.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let u=[];e=this.configuration.selectHeaderAccept(u)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s=["application/json"],o=this.configuration.selectHeaderContentType(s);o!==void 0&&(r=r.set("Content-Type",o));let c="json";e&&(e.startsWith("text")?c="text":this.configuration.isJsonMime(e)?c="json":c="blob");let f="/api/compositions/edit-composition";return this.httpClient.request("put",`${this.configuration.basePath}${f}`,{context:n,body:t,responseType:c,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}editDevice(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter editedDeviceDTO was null or undefined when calling editDevice.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let u=[];e=this.configuration.selectHeaderAccept(u)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s=["application/json"],o=this.configuration.selectHeaderContentType(s);o!==void 0&&(r=r.set("Content-Type",o));let c="json";e&&(e.startsWith("text")?c="text":this.configuration.isJsonMime(e)?c="json":c="blob");let f="/api/compositions/edit-device";return this.httpClient.request("put",`${this.configuration.basePath}${f}`,{context:n,body:t,responseType:c,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}linkCompositions(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter linkedCompositionsDTO was null or undefined when calling linkCompositions.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let u=[];e=this.configuration.selectHeaderAccept(u)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s=["application/json"],o=this.configuration.selectHeaderContentType(s);o!==void 0&&(r=r.set("Content-Type",o));let c="json";e&&(e.startsWith("text")?c="text":this.configuration.isJsonMime(e)?c="json":c="blob");let f="/api/compositions/link-compositions";return this.httpClient.request("post",`${this.configuration.basePath}${f}`,{context:n,body:t,responseType:c,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}readComposition(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter id was null or undefined when calling readComposition.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let c=["application/json"];e=this.configuration.selectHeaderAccept(c)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s="json";e&&(e.startsWith("text")?s="text":this.configuration.isJsonMime(e)?s="json":s="blob");let o=`/api/compositions/read-composition/${this.configuration.encodeParam({name:"id",value:t,in:"path",style:"simple",explode:!1,dataType:"number",dataFormat:"int64"})}`;return this.httpClient.request("get",`${this.configuration.basePath}${o}`,{context:n,responseType:s,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}readCompositionDetails(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter id was null or undefined when calling readCompositionDetails.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let c=["application/json"];e=this.configuration.selectHeaderAccept(c)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s="json";e&&(e.startsWith("text")?s="text":this.configuration.isJsonMime(e)?s="json":s="blob");let o=`/api/compositions/read-composition-details/${this.configuration.encodeParam({name:"id",value:t,in:"path",style:"simple",explode:!1,dataType:"number",dataFormat:"int64"})}`;return this.httpClient.request("get",`${this.configuration.basePath}${o}`,{context:n,responseType:s,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}readCompositionStatuses(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter filters was null or undefined when calling readCompositionStatuses.");let r=new w({encoder:this.encoder});t!=null&&(r=this.addToHttpParams(r,t,"filters"));let e=this.defaultHeaders,n=i&&i.httpHeaderAccept;if(n===void 0){let f=["application/json"];n=this.configuration.selectHeaderAccept(f)}n!==void 0&&(e=e.set("Accept",n));let s=i&&i.context;s===void 0&&(s=new p);let o="json";n&&(n.startsWith("text")?o="text":this.configuration.isJsonMime(n)?o="json":o="blob");let c="/api/compositions/read-composition-statuses";return this.httpClient.request("get",`${this.configuration.basePath}${c}`,{context:s,params:r,responseType:o,withCredentials:this.configuration.withCredentials,headers:e,observe:a,reportProgress:l})}readCompositionTypes(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter filters was null or undefined when calling readCompositionTypes.");let r=new w({encoder:this.encoder});t!=null&&(r=this.addToHttpParams(r,t,"filters"));let e=this.defaultHeaders,n=i&&i.httpHeaderAccept;if(n===void 0){let f=["application/json"];n=this.configuration.selectHeaderAccept(f)}n!==void 0&&(e=e.set("Accept",n));let s=i&&i.context;s===void 0&&(s=new p);let o="json";n&&(n.startsWith("text")?o="text":this.configuration.isJsonMime(n)?o="json":o="blob");let c="/api/compositions/read-composition-types";return this.httpClient.request("get",`${this.configuration.basePath}${c}`,{context:s,params:r,responseType:o,withCredentials:this.configuration.withCredentials,headers:e,observe:a,reportProgress:l})}readCompositions(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter filters was null or undefined when calling readCompositions.");let r=new w({encoder:this.encoder});t!=null&&(r=this.addToHttpParams(r,t,"filters"));let e=this.defaultHeaders,n=i&&i.httpHeaderAccept;if(n===void 0){let f=["application/json"];n=this.configuration.selectHeaderAccept(f)}n!==void 0&&(e=e.set("Accept",n));let s=i&&i.context;s===void 0&&(s=new p);let o="json";n&&(n.startsWith("text")?o="text":this.configuration.isJsonMime(n)?o="json":o="blob");let c="/api/compositions/read-compositions";return this.httpClient.request("get",`${this.configuration.basePath}${c}`,{context:s,params:r,responseType:o,withCredentials:this.configuration.withCredentials,headers:e,observe:a,reportProgress:l})}readDeviceDetails(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter id was null or undefined when calling readDeviceDetails.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let c=["application/json"];e=this.configuration.selectHeaderAccept(c)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s="json";e&&(e.startsWith("text")?s="text":this.configuration.isJsonMime(e)?s="json":s="blob");let o=`/api/compositions/read-device-details/${this.configuration.encodeParam({name:"id",value:t,in:"path",style:"simple",explode:!1,dataType:"number",dataFormat:"int64"})}`;return this.httpClient.request("get",`${this.configuration.basePath}${o}`,{context:n,responseType:s,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}readDeviceStatuses(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter filters was null or undefined when calling readDeviceStatuses.");let r=new w({encoder:this.encoder});t!=null&&(r=this.addToHttpParams(r,t,"filters"));let e=this.defaultHeaders,n=i&&i.httpHeaderAccept;if(n===void 0){let f=["application/json"];n=this.configuration.selectHeaderAccept(f)}n!==void 0&&(e=e.set("Accept",n));let s=i&&i.context;s===void 0&&(s=new p);let o="json";n&&(n.startsWith("text")?o="text":this.configuration.isJsonMime(n)?o="json":o="blob");let c="/api/compositions/read-device-statuses";return this.httpClient.request("get",`${this.configuration.basePath}${c}`,{context:s,params:r,responseType:o,withCredentials:this.configuration.withCredentials,headers:e,observe:a,reportProgress:l})}readDevices(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter filters was null or undefined when calling readDevices.");let r=new w({encoder:this.encoder});t!=null&&(r=this.addToHttpParams(r,t,"filters"));let e=this.defaultHeaders,n=i&&i.httpHeaderAccept;if(n===void 0){let f=["application/json"];n=this.configuration.selectHeaderAccept(f)}n!==void 0&&(e=e.set("Accept",n));let s=i&&i.context;s===void 0&&(s=new p);let o="json";n&&(n.startsWith("text")?o="text":this.configuration.isJsonMime(n)?o="json":o="blob");let c="/api/compositions/read-devices";return this.httpClient.request("get",`${this.configuration.basePath}${c}`,{context:s,params:r,responseType:o,withCredentials:this.configuration.withCredentials,headers:e,observe:a,reportProgress:l})}unlinkCompositions(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter linkedCompositionsDTO was null or undefined when calling unlinkCompositions.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let u=[];e=this.configuration.selectHeaderAccept(u)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s=["application/json"],o=this.configuration.selectHeaderContentType(s);o!==void 0&&(r=r.set("Content-Type",o));let c="json";e&&(e.startsWith("text")?c="text":this.configuration.isJsonMime(e)?c="json":c="blob");let f="/api/compositions/unlink-compositions";return this.httpClient.request("post",`${this.configuration.basePath}${f}`,{context:n,body:t,responseType:c,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}};d.\u0275fac=function(a){return new(a||d)(m(b),m(A,8),m(h,8))},d.\u0275prov=y({token:d,factory:d.\u0275fac,providedIn:"root"});let H=d;return H})();var E=(()=>{let d=class d{constructor(t,a,l){this.httpClient=t,this.basePath="http://localhost:8080",this.defaultHeaders=new C,this.configuration=new h,l&&(this.configuration=l),typeof this.configuration.basePath!="string"&&(Array.isArray(a)&&a.length>0&&(a=a[0]),typeof a!="string"&&(a=this.basePath),this.configuration.basePath=a),this.encoder=this.configuration.encoder||new x}addToHttpParams(t,a,l){return typeof a=="object"&&!(a instanceof Date)?t=this.addToHttpParamsRecursive(t,a):t=this.addToHttpParamsRecursive(t,a,l),t}addToHttpParamsRecursive(t,a,l){if(a==null)return t;if(typeof a=="object")if(Array.isArray(a))a.forEach(i=>t=this.addToHttpParamsRecursive(t,i,l));else if(a instanceof Date)if(l!=null)t=t.append(l,a.toISOString().substring(0,10));else throw Error("key may not be null if value is Date");else Object.keys(a).forEach(i=>t=this.addToHttpParamsRecursive(t,a[i],l!=null?`${l}.${i}`:i));else if(l!=null)t=t.append(l,a);else throw Error("key may not be null if value is not object or array");return t}checkIfCityExists(t,a,l="body",i=!1,r){if(t==null)throw new Error("Required parameter countryId was null or undefined when calling checkIfCityExists.");if(a==null)throw new Error("Required parameter name was null or undefined when calling checkIfCityExists.");let e=this.defaultHeaders,n=r&&r.httpHeaderAccept;if(n===void 0){let f=["application/json"];n=this.configuration.selectHeaderAccept(f)}n!==void 0&&(e=e.set("Accept",n));let s=r&&r.context;s===void 0&&(s=new p);let o="json";n&&(n.startsWith("text")?o="text":this.configuration.isJsonMime(n)?o="json":o="blob");let c=`/api/countries/city-exists/${this.configuration.encodeParam({name:"countryId",value:t,in:"path",style:"simple",explode:!1,dataType:"number",dataFormat:"int64"})}/${this.configuration.encodeParam({name:"name",value:a,in:"path",style:"simple",explode:!1,dataType:"string",dataFormat:void 0})}`;return this.httpClient.request("get",`${this.configuration.basePath}${c}`,{context:s,responseType:o,withCredentials:this.configuration.withCredentials,headers:e,observe:l,reportProgress:i})}checkIfCountryExists(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter name was null or undefined when calling checkIfCountryExists.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let c=["application/json"];e=this.configuration.selectHeaderAccept(c)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s="json";e&&(e.startsWith("text")?s="text":this.configuration.isJsonMime(e)?s="json":s="blob");let o=`/api/countries/country-exists/${this.configuration.encodeParam({name:"name",value:t,in:"path",style:"simple",explode:!1,dataType:"string",dataFormat:void 0})}`;return this.httpClient.request("get",`${this.configuration.basePath}${o}`,{context:n,responseType:s,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}checkIfLocationNameExists(t,a,l="body",i=!1,r){if(t==null)throw new Error("Required parameter cityId was null or undefined when calling checkIfLocationNameExists.");if(a==null)throw new Error("Required parameter name was null or undefined when calling checkIfLocationNameExists.");let e=this.defaultHeaders,n=r&&r.httpHeaderAccept;if(n===void 0){let f=["application/json"];n=this.configuration.selectHeaderAccept(f)}n!==void 0&&(e=e.set("Accept",n));let s=r&&r.context;s===void 0&&(s=new p);let o="json";n&&(n.startsWith("text")?o="text":this.configuration.isJsonMime(n)?o="json":o="blob");let c=`/api/countries/location-name-exists/${this.configuration.encodeParam({name:"cityId",value:t,in:"path",style:"simple",explode:!1,dataType:"number",dataFormat:"int64"})}/${this.configuration.encodeParam({name:"name",value:a,in:"path",style:"simple",explode:!1,dataType:"string",dataFormat:void 0})}`;return this.httpClient.request("get",`${this.configuration.basePath}${c}`,{context:s,responseType:o,withCredentials:this.configuration.withCredentials,headers:e,observe:l,reportProgress:i})}checkIfPostalCodeExists(t,a,l="body",i=!1,r){if(t==null)throw new Error("Required parameter countryId was null or undefined when calling checkIfPostalCodeExists.");if(a==null)throw new Error("Required parameter postalCode was null or undefined when calling checkIfPostalCodeExists.");let e=this.defaultHeaders,n=r&&r.httpHeaderAccept;if(n===void 0){let f=["application/json"];n=this.configuration.selectHeaderAccept(f)}n!==void 0&&(e=e.set("Accept",n));let s=r&&r.context;s===void 0&&(s=new p);let o="json";n&&(n.startsWith("text")?o="text":this.configuration.isJsonMime(n)?o="json":o="blob");let c=`/api/countries/postal-code-exists/${this.configuration.encodeParam({name:"countryId",value:t,in:"path",style:"simple",explode:!1,dataType:"number",dataFormat:"int64"})}/${this.configuration.encodeParam({name:"postalCode",value:a,in:"path",style:"simple",explode:!1,dataType:"string",dataFormat:void 0})}`;return this.httpClient.request("get",`${this.configuration.basePath}${c}`,{context:s,responseType:o,withCredentials:this.configuration.withCredentials,headers:e,observe:l,reportProgress:i})}createCity(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter baseCityDTO was null or undefined when calling createCity.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let u=[];e=this.configuration.selectHeaderAccept(u)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s=["application/json"],o=this.configuration.selectHeaderContentType(s);o!==void 0&&(r=r.set("Content-Type",o));let c="json";e&&(e.startsWith("text")?c="text":this.configuration.isJsonMime(e)?c="json":c="blob");let f="/api/countries/create-city";return this.httpClient.request("post",`${this.configuration.basePath}${f}`,{context:n,body:t,responseType:c,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}createCountry(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter body was null or undefined when calling createCountry.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let u=[];e=this.configuration.selectHeaderAccept(u)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s=["application/json"],o=this.configuration.selectHeaderContentType(s);o!==void 0&&(r=r.set("Content-Type",o));let c="json";e&&(e.startsWith("text")?c="text":this.configuration.isJsonMime(e)?c="json":c="blob");let f="/api/countries/create-country";return this.httpClient.request("post",`${this.configuration.basePath}${f}`,{context:n,body:t,responseType:c,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}createLocation(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter baseLocationDTO was null or undefined when calling createLocation.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let u=[];e=this.configuration.selectHeaderAccept(u)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s=["application/json"],o=this.configuration.selectHeaderContentType(s);o!==void 0&&(r=r.set("Content-Type",o));let c="json";e&&(e.startsWith("text")?c="text":this.configuration.isJsonMime(e)?c="json":c="blob");let f="/api/countries/create-location";return this.httpClient.request("post",`${this.configuration.basePath}${f}`,{context:n,body:t,responseType:c,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}deleteCity(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter id was null or undefined when calling deleteCity.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let c=[];e=this.configuration.selectHeaderAccept(c)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s="json";e&&(e.startsWith("text")?s="text":this.configuration.isJsonMime(e)?s="json":s="blob");let o=`/api/countries/delete-city/${this.configuration.encodeParam({name:"id",value:t,in:"path",style:"simple",explode:!1,dataType:"number",dataFormat:"int64"})}`;return this.httpClient.request("delete",`${this.configuration.basePath}${o}`,{context:n,responseType:s,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}deleteCountry(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter id was null or undefined when calling deleteCountry.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let c=[];e=this.configuration.selectHeaderAccept(c)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s="json";e&&(e.startsWith("text")?s="text":this.configuration.isJsonMime(e)?s="json":s="blob");let o=`/api/countries/delete-country/${this.configuration.encodeParam({name:"id",value:t,in:"path",style:"simple",explode:!1,dataType:"number",dataFormat:"int64"})}`;return this.httpClient.request("delete",`${this.configuration.basePath}${o}`,{context:n,responseType:s,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}deleteLocation(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter id was null or undefined when calling deleteLocation.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let c=[];e=this.configuration.selectHeaderAccept(c)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s="json";e&&(e.startsWith("text")?s="text":this.configuration.isJsonMime(e)?s="json":s="blob");let o=`/api/countries/delete-location/${this.configuration.encodeParam({name:"id",value:t,in:"path",style:"simple",explode:!1,dataType:"number",dataFormat:"int64"})}`;return this.httpClient.request("delete",`${this.configuration.basePath}${o}`,{context:n,responseType:s,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}editCity(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter editedCityDTO was null or undefined when calling editCity.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let u=[];e=this.configuration.selectHeaderAccept(u)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s=["application/json"],o=this.configuration.selectHeaderContentType(s);o!==void 0&&(r=r.set("Content-Type",o));let c="json";e&&(e.startsWith("text")?c="text":this.configuration.isJsonMime(e)?c="json":c="blob");let f="/api/countries/edit-city";return this.httpClient.request("put",`${this.configuration.basePath}${f}`,{context:n,body:t,responseType:c,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}editCountry(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter country was null or undefined when calling editCountry.");let r=new w({encoder:this.encoder});t!=null&&(r=this.addToHttpParams(r,t,"country"));let e=this.defaultHeaders,n=i&&i.httpHeaderAccept;if(n===void 0){let f=[];n=this.configuration.selectHeaderAccept(f)}n!==void 0&&(e=e.set("Accept",n));let s=i&&i.context;s===void 0&&(s=new p);let o="json";n&&(n.startsWith("text")?o="text":this.configuration.isJsonMime(n)?o="json":o="blob");let c="/api/countries/edit-country";return this.httpClient.request("put",`${this.configuration.basePath}${c}`,{context:s,params:r,responseType:o,withCredentials:this.configuration.withCredentials,headers:e,observe:a,reportProgress:l})}editLocation(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter editedLocationDTO was null or undefined when calling editLocation.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let u=[];e=this.configuration.selectHeaderAccept(u)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s=["application/json"],o=this.configuration.selectHeaderContentType(s);o!==void 0&&(r=r.set("Content-Type",o));let c="json";e&&(e.startsWith("text")?c="text":this.configuration.isJsonMime(e)?c="json":c="blob");let f="/api/countries/edit-location";return this.httpClient.request("put",`${this.configuration.basePath}${f}`,{context:n,body:t,responseType:c,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}readCitiesLikeName(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter filters was null or undefined when calling readCitiesLikeName.");let r=new w({encoder:this.encoder});t!=null&&(r=this.addToHttpParams(r,t,"filters"));let e=this.defaultHeaders,n=i&&i.httpHeaderAccept;if(n===void 0){let f=["application/json"];n=this.configuration.selectHeaderAccept(f)}n!==void 0&&(e=e.set("Accept",n));let s=i&&i.context;s===void 0&&(s=new p);let o="json";n&&(n.startsWith("text")?o="text":this.configuration.isJsonMime(n)?o="json":o="blob");let c="/api/countries/read-cities-like-name";return this.httpClient.request("get",`${this.configuration.basePath}${c}`,{context:s,params:r,responseType:o,withCredentials:this.configuration.withCredentials,headers:e,observe:a,reportProgress:l})}readCitiesOfCountry(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter filters was null or undefined when calling readCitiesOfCountry.");let r=new w({encoder:this.encoder});t!=null&&(r=this.addToHttpParams(r,t,"filters"));let e=this.defaultHeaders,n=i&&i.httpHeaderAccept;if(n===void 0){let f=["application/json"];n=this.configuration.selectHeaderAccept(f)}n!==void 0&&(e=e.set("Accept",n));let s=i&&i.context;s===void 0&&(s=new p);let o="json";n&&(n.startsWith("text")?o="text":this.configuration.isJsonMime(n)?o="json":o="blob");let c="/api/countries/read-cities-of-country";return this.httpClient.request("get",`${this.configuration.basePath}${c}`,{context:s,params:r,responseType:o,withCredentials:this.configuration.withCredentials,headers:e,observe:a,reportProgress:l})}readCity(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter id was null or undefined when calling readCity.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let c=["application/json"];e=this.configuration.selectHeaderAccept(c)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s="json";e&&(e.startsWith("text")?s="text":this.configuration.isJsonMime(e)?s="json":s="blob");let o=`/api/countries/read-city/${this.configuration.encodeParam({name:"id",value:t,in:"path",style:"simple",explode:!1,dataType:"number",dataFormat:"int64"})}`;return this.httpClient.request("get",`${this.configuration.basePath}${o}`,{context:n,responseType:s,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}readCountries(t,a="body",l=!1,i){let r=new w({encoder:this.encoder});t!=null&&(r=this.addToHttpParams(r,t,"offset"));let e=this.defaultHeaders,n=i&&i.httpHeaderAccept;if(n===void 0){let f=["application/json"];n=this.configuration.selectHeaderAccept(f)}n!==void 0&&(e=e.set("Accept",n));let s=i&&i.context;s===void 0&&(s=new p);let o="json";n&&(n.startsWith("text")?o="text":this.configuration.isJsonMime(n)?o="json":o="blob");let c="/api/countries/read-countries";return this.httpClient.request("get",`${this.configuration.basePath}${c}`,{context:s,params:r,responseType:o,withCredentials:this.configuration.withCredentials,headers:e,observe:a,reportProgress:l})}readCountry(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter id was null or undefined when calling readCountry.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let c=["application/json"];e=this.configuration.selectHeaderAccept(c)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s="json";e&&(e.startsWith("text")?s="text":this.configuration.isJsonMime(e)?s="json":s="blob");let o=`/api/countries/read-country/${this.configuration.encodeParam({name:"id",value:t,in:"path",style:"simple",explode:!1,dataType:"number",dataFormat:"int64"})}`;return this.httpClient.request("get",`${this.configuration.basePath}${o}`,{context:n,responseType:s,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}readLocations(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter filters was null or undefined when calling readLocations.");let r=new w({encoder:this.encoder});t!=null&&(r=this.addToHttpParams(r,t,"filters"));let e=this.defaultHeaders,n=i&&i.httpHeaderAccept;if(n===void 0){let f=["application/json"];n=this.configuration.selectHeaderAccept(f)}n!==void 0&&(e=e.set("Accept",n));let s=i&&i.context;s===void 0&&(s=new p);let o="json";n&&(n.startsWith("text")?o="text":this.configuration.isJsonMime(n)?o="json":o="blob");let c="/api/countries/read-locations";return this.httpClient.request("get",`${this.configuration.basePath}${c}`,{context:s,params:r,responseType:o,withCredentials:this.configuration.withCredentials,headers:e,observe:a,reportProgress:l})}readLocationsOfCity(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter id was null or undefined when calling readLocationsOfCity.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let c=["application/json"];e=this.configuration.selectHeaderAccept(c)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s="json";e&&(e.startsWith("text")?s="text":this.configuration.isJsonMime(e)?s="json":s="blob");let o=`/api/countries/read-locations-of-city/${this.configuration.encodeParam({name:"id",value:t,in:"path",style:"simple",explode:!1,dataType:"number",dataFormat:"int64"})}`;return this.httpClient.request("get",`${this.configuration.basePath}${o}`,{context:n,responseType:s,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}};d.\u0275fac=function(a){return new(a||d)(m(b),m(A,8),m(h,8))},d.\u0275prov=y({token:d,factory:d.\u0275fac,providedIn:"root"});let H=d;return H})();var q=(()=>{let d=class d{constructor(t,a,l){this.httpClient=t,this.basePath="http://localhost:8080",this.defaultHeaders=new C,this.configuration=new h,l&&(this.configuration=l),typeof this.configuration.basePath!="string"&&(Array.isArray(a)&&a.length>0&&(a=a[0]),typeof a!="string"&&(a=this.basePath),this.configuration.basePath=a),this.encoder=this.configuration.encoder||new x}addToHttpParams(t,a,l){return typeof a=="object"&&!(a instanceof Date)?t=this.addToHttpParamsRecursive(t,a):t=this.addToHttpParamsRecursive(t,a,l),t}addToHttpParamsRecursive(t,a,l){if(a==null)return t;if(typeof a=="object")if(Array.isArray(a))a.forEach(i=>t=this.addToHttpParamsRecursive(t,i,l));else if(a instanceof Date)if(l!=null)t=t.append(l,a.toISOString().substring(0,10));else throw Error("key may not be null if value is Date");else Object.keys(a).forEach(i=>t=this.addToHttpParamsRecursive(t,a[i],l!=null?`${l}.${i}`:i));else if(l!=null)t=t.append(l,a);else throw Error("key may not be null if value is not object or array");return t}createEvent(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter newEventDTO was null or undefined when calling createEvent.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let u=[];e=this.configuration.selectHeaderAccept(u)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s=["application/json"],o=this.configuration.selectHeaderContentType(s);o!==void 0&&(r=r.set("Content-Type",o));let c="json";e&&(e.startsWith("text")?c="text":this.configuration.isJsonMime(e)?c="json":c="blob");let f="/api/events/create-event";return this.httpClient.request("post",`${this.configuration.basePath}${f}`,{context:n,body:t,responseType:c,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}deleteEvent(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter id was null or undefined when calling deleteEvent.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let c=[];e=this.configuration.selectHeaderAccept(c)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s="json";e&&(e.startsWith("text")?s="text":this.configuration.isJsonMime(e)?s="json":s="blob");let o=`/api/events/delete-event/${this.configuration.encodeParam({name:"id",value:t,in:"path",style:"simple",explode:!1,dataType:"number",dataFormat:"int64"})}`;return this.httpClient.request("delete",`${this.configuration.basePath}${o}`,{context:n,responseType:s,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}readEventDetails(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter id was null or undefined when calling readEventDetails.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let c=["application/json"];e=this.configuration.selectHeaderAccept(c)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s="json";e&&(e.startsWith("text")?s="text":this.configuration.isJsonMime(e)?s="json":s="blob");let o=`/api/events/read-event-details/${this.configuration.encodeParam({name:"id",value:t,in:"path",style:"simple",explode:!1,dataType:"number",dataFormat:"int64"})}`;return this.httpClient.request("get",`${this.configuration.basePath}${o}`,{context:n,responseType:s,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}readEventTypes(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter filters was null or undefined when calling readEventTypes.");let r=new w({encoder:this.encoder});t!=null&&(r=this.addToHttpParams(r,t,"filters"));let e=this.defaultHeaders,n=i&&i.httpHeaderAccept;if(n===void 0){let f=["application/json"];n=this.configuration.selectHeaderAccept(f)}n!==void 0&&(e=e.set("Accept",n));let s=i&&i.context;s===void 0&&(s=new p);let o="json";n&&(n.startsWith("text")?o="text":this.configuration.isJsonMime(n)?o="json":o="blob");let c="/api/events/event-types";return this.httpClient.request("get",`${this.configuration.basePath}${c}`,{context:s,params:r,responseType:o,withCredentials:this.configuration.withCredentials,headers:e,observe:a,reportProgress:l})}readEvents(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter filters was null or undefined when calling readEvents.");let r=new w({encoder:this.encoder});t!=null&&(r=this.addToHttpParams(r,t,"filters"));let e=this.defaultHeaders,n=i&&i.httpHeaderAccept;if(n===void 0){let f=["application/json"];n=this.configuration.selectHeaderAccept(f)}n!==void 0&&(e=e.set("Accept",n));let s=i&&i.context;s===void 0&&(s=new p);let o="json";n&&(n.startsWith("text")?o="text":this.configuration.isJsonMime(n)?o="json":o="blob");let c="/api/events/read-events";return this.httpClient.request("get",`${this.configuration.basePath}${c}`,{context:s,params:r,responseType:o,withCredentials:this.configuration.withCredentials,headers:e,observe:a,reportProgress:l})}uploadSignals(t,a="body",l=!1,i){if(t==null)throw new Error("Required parameter uploadedSignalDTO was null or undefined when calling uploadSignals.");let r=this.defaultHeaders,e=i&&i.httpHeaderAccept;if(e===void 0){let u=[];e=this.configuration.selectHeaderAccept(u)}e!==void 0&&(r=r.set("Accept",e));let n=i&&i.context;n===void 0&&(n=new p);let s=["application/json"],o=this.configuration.selectHeaderContentType(s);o!==void 0&&(r=r.set("Content-Type",o));let c="json";e&&(e.startsWith("text")?c="text":this.configuration.isJsonMime(e)?c="json":c="blob");let f="/api/events/upload-signals";return this.httpClient.request("post",`${this.configuration.basePath}${f}`,{context:n,body:t,responseType:c,withCredentials:this.configuration.withCredentials,headers:r,observe:a,reportProgress:l})}};d.\u0275fac=function(a){return new(a||d)(m(b),m(A,8),m(h,8))},d.\u0275prov=y({token:d,factory:d.\u0275fac,providedIn:"root"});let H=d;return H})();export{$ as a,v as b,E as c,q as d};
